# SonarQube configuration for vulnerability testing
sonar.projectKey=swft-python
sonar.projectName=swft-python

# Sources - relative to repository root since scanner runs from there
sonar.sources=python/app,python/vulnerable_module.py,python/vulnerable_deploy.py
sonar.sourceEncoding=UTF-8

# Include vulnerable files but exclude build artifacts
sonar.exclusions=**/.venv/**,**/dist/**,**/build/**,**/__pycache__/**,**/.pytest_cache/**,**/node_modules/**,**/csharp/**

# Python configuration
sonar.python.version=3.11
sonar.python.coverage.reportPaths=python/coverage.xml

# Test configuration - specify tests directory relative to repository root
sonar.tests=python/tests
sonar.test.inclusions=**/test_*.py,**/*_test.py
sonar.test.exclusions=**/venv/**,**/.tox/**,**/site-packages/**,**/__pycache__/**

# Enable security analysis (this will detect vulnerabilities)
sonar.security.hotspots.inheritFromParent=true

# Quality gate configuration for test project
# Allow issues to be reported but don't fail quality gate on them
sonar.qualitygate.wait=false

# Project metadata for vulnerability testing
sonar.projectDescription=Test project with intentional vulnerabilities for security scanning
sonar.links.homepage=https://github.com/ISD-AI-Hero/scai
sonar.links.scm=https://github.com/ISD-AI-Hero/scai

# Enable security analysis (this will detect vulnerabilities)
sonar.security.hotspots.inheritFromParent=true

# Quality gate configuration for test project
# Allow issues to be reported but don't fail quality gate on them
sonar.qualitygate.wait=false

# Project metadata for vulnerability testing
sonar.projectDescription=Test project with intentional vulnerabilities for security scanning
sonar.links.homepage=https://github.com/ISD-AI-Hero/scai
sonar.links.scm=https://github.com/ISD-AI-Hero/scai